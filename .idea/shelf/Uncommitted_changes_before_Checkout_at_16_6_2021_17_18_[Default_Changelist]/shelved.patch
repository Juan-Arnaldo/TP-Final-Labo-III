Index: src/com/company/Utilidad/Menu.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.company.Utilidad;\r\n\r\nimport com.company.Articulo.Articulo;\r\nimport com.company.Local.Caja;\r\nimport com.company.Local.DescTarjeta;\r\nimport com.company.Local.Descuento;\r\nimport com.company.Local.Local;\r\nimport com.company.Operacion.Compra;\r\nimport com.company.Operacion.Venta;\r\nimport com.company.Persona.Cliente;\r\nimport com.company.Persona.Proveedor;\r\n\r\nimport java.time.LocalDate;\r\nimport java.time.LocalTime;\r\nimport java.util.Scanner;\r\n\r\npublic class Menu {\r\n    private Scanner sc;\r\n\r\n    public Menu() {\r\n        sc = new Scanner(System.in);\r\n    }\r\n\r\n    /**\r\n     * Método para cargar los datos de un nuevo cliente, con sus correspondientes validaciones.\r\n     * @param local en cuyo registro se cargará el nuevo cliente.\r\n     * @return cliente nuevo a registrar.\r\n     */\r\n    public Cliente cargarNuevoCliente(Local local) {\r\n        Validacion validacion = new Validacion();\r\n\r\n        String cuit = cargarCuit();\r\n        while(validacion.validarCuitCliente(cuit, local.getListaClientes().getLista())) {\r\n            cuit = cargarNuevamenteCuitPersona(cuit);\r\n        }\r\n\r\n        String nombre = cargarNombre();\r\n        String apellido = cargarApellido();\r\n        String direc = cargarDireccion();\r\n        String tel = cargarTelefono();\r\n\r\n        String email = cargarEmail();\r\n        while(!validacion.validacionEmailValido(email)) {\r\n            email = cargarNuevamenteEmailPersona(email);\r\n        }\r\n\r\n        return new Cliente(nombre, direc, cuit, tel, email, apellido);\r\n    }\r\n\r\n    /**\r\n     * Método para cargar los datos de un nuevo proveedor, con sus correspondientes validaciones.\r\n     * @param local en cuyo registro se cargará el nuevo proveedor.\r\n     * @return proveedor nuevo a registrar.\r\n     */\r\n    public Proveedor cargarNuevoProveedor(Local local) {\r\n        Validacion validacion = new Validacion();\r\n\r\n        String cuit = cargarCuit();\r\n        while(validacion.validarCuitProveedor(cuit, local.getListaProveedores().getLista())) {\r\n            cuit = cargarNuevamenteCuitPersona(cuit);\r\n        }\r\n\r\n        String nombre = cargarNombre();\r\n        String apellido = cargarApellido();\r\n        String direc = cargarDireccion();\r\n        String tel = cargarTelefono();\r\n        String email = cargarEmail();\r\n\r\n        while(!validacion.validacionEmailValido(email)) {\r\n            email = cargarNuevamenteEmailPersona(email);\r\n        }\r\n        String localidad = cargarLocalidad();\r\n\r\n        return new Proveedor(nombre, direc, cuit, tel, email, localidad, apellido);\r\n    }\r\n\r\n    /**\r\n     * Método para cargar los datos de un nuevo artículo, con sus correspondientes validaciones.\r\n     * @param local en cuyo registro se cargará el nuevo artículo.\r\n     * @return artículo nuevo a registrar.\r\n     */\r\n    public Articulo cargarNuevoArticulo(Local local) {\r\n        String nombre, departamento, marca;\r\n        int stock = 0;\r\n        double utilidad;\r\n        nombre = cargarNombreArticulo();\r\n        while (local.nombreArticuloRepetido(nombre)) {\r\n            nombre = cargarNuevamenteNombreArticulo(nombre);\r\n        }\r\n        departamento = cargarDepartamentoArticulo();\r\n        //TODO - Buscar la forma de validar existencia de departamentos. ¿Enum?\r\n        marca = cargarMarcaArticulo();\r\n        //TODO - Buscar la forma de validar existencia de marca. ¿Enum?\r\n        utilidad = cargarUtilidadArticulo();\r\n        while (utilidad < 0 || utilidad > 1000) {             // ¿Puede haber artículos que se vendan al costo? (Utilidad = 0)\r\n            if (utilidad < 0)\r\n                utilidad = cargarNuevamenteUtilidadNegativa(utilidad);\r\n            if (utilidad > 1000)\r\n                utilidad = cargarNuevamenteUtilidadExcesiva(utilidad);\r\n        }\r\n        stock = cargaStock();\r\n        while(stock < 0){\r\n            stock = cargaStockNuevamente();\r\n        }\r\n\r\n        return new Articulo(nombre, departamento, marca, utilidad, stock);\r\n    }\r\n\r\n    /**\r\n     * Método para cargar los datos de una nueva compra, con sus correspondientes validaciones.\r\n     * @param local en cuyo registro se cargará la nueva compra.\r\n     * @return compra nuevo a registrar.\r\n     */\r\n    public Compra cargarNuevaCompra(Local local) {\r\n        Compra nuevaCompra = new Compra();\r\n\r\n        String nombreArticuloComprado = null;\r\n        Articulo articuloComprado = null;\r\n        int cantidadComprada = 0;\r\n        double costoLinea = 0;\r\n\r\n        Proveedor proveedor = local.buscarProveedor();\r\n\r\n        while (proveedor == null){\r\n            int aux = proveedorNoExiste();\r\n            switch (aux){\r\n                case 1:\r\n                    proveedor = local.buscarProveedor();\r\n                    break;\r\n                case 2:\r\n                    local.nuevoProveedor(cargarNuevoProveedor(local));\r\n                    proveedor = local.buscarProveedor();\r\n                    break;\r\n                default:\r\n                    System.out.println(\"\\nLa opcion ingresada es incorrecta\");\r\n                    break;\r\n            }\r\n        }\r\n\r\n        do {\r\n            nombreArticuloComprado = cargarNombreArticulo();\r\n            articuloComprado = local.buscarArticuloNombre(nombreArticuloComprado);\r\n            while(articuloComprado == null) {                                            // En caso de que el nombre ingresado no corresponda con un artículo registrado\r\n                switch (nombreArticuloCompradoNoExiste(nombreArticuloComprado)) {        // Le pregunto al usuario qué desea hacer\r\n                    case 1 :\r\n                        nombreArticuloComprado = cargarNombreArticulo();                 // Corrige el nombre cargado\r\n                        break;\r\n                    case 2 :\r\n                        local.nuevoArticulo(cargarNuevoArticulo(local));                 // El nombre es correcto y decide cargarlo en el registro de artículos\r\n                        break;\r\n                    default:\r\n                        System.out.println(\"La opcion ingresada no es valida.\");         // Toca tecla que no va\r\n                        break;\r\n                }\r\n            }\r\n\r\n            cantidadComprada = cargarCantidadArticulo();                                 // Carga de la Cantidad de Artículos en la Línea\r\n            while(cantidadComprada < 1){\r\n                cantidadComprada = cantidadCeroONegativa(cantidadComprada);\r\n            }\r\n\r\n            costoLinea = cargarCostoLinea();                                             // Carga del Costo de la Línea\r\n            while(costoLinea <= 0){\r\n                costoLinea = costoCeroONegativo(costoLinea);\r\n            }\r\n\r\n            nuevaCompra.agregarLinea(articuloComprado, cantidadComprada, costoLinea);\r\n        } while(continuarCargandoLineasCompra());\r\n\r\n        return nuevaCompra;\r\n    }\r\n\r\n    /**\r\n     * Método para cargar los datos de una nueva venta, con sus correspondientes validaciones.\r\n     * @param local en cuyo registro se cargará la nueva venta.\r\n     * @return venta nuevo a registrar.\r\n     */\r\n    public Venta cargarNuevaVenta(Local local, Caja caja) {\r\n        Cliente cliente = local.buscarCliente();\r\n\r\n        while (cliente == null){\r\n            int aux = clienteNoExiste();\r\n            switch (aux){\r\n                case 1:\r\n                    cliente = local.buscarCliente();\r\n                    break;\r\n                case 2:\r\n                    cliente = local.getListaClientes().getElemento(0);\r\n                    break;\r\n                case 3:\r\n                    local.nuevoCliente(cargarNuevoCliente(local));\r\n                    cliente = local.buscarCliente();\r\n                    break;\r\n                default:\r\n                    System.out.println(\"\\nLa opcion ingresada es incorrecta\");\r\n                    break;\r\n            }\r\n        }\r\n\r\n        Venta nuevaVenta = new Venta(cliente, caja.getIdCaja());\r\n\r\n        String metodoPago = local.cargarMetodoDePago();\r\n        nuevaVenta.setMetodoPago(metodoPago);\r\n        if(metodoPago != null){\r\n            do {\r\n                Menu t2 = new Menu();\r\n                String nombre = t2.cargarNombreArticulo();\r\n                Articulo art = local.buscarArticuloNombre(nombre);\r\n                if (art != null) {\r\n                    int cant = nuevaVenta.cargarCantidadArticulo(art);\r\n                    if(cant != 0){\r\n                        nuevaVenta.agregarLinea(art, cant);\r\n                        local.nuevoStock(art,cant);\r\n                    }\r\n                }\r\n\r\n            }while (deseaContinuar());\r\n        }\r\n\r\n        return nuevaVenta;\r\n    }\r\n\r\n\r\n    /**\r\n     * Método para cargar los datos de un nuevo descuento del tipo tarjeta, con sus correspondientes validaciones.\r\n     * @param local en cuyo registro se cargará el nuevo descuento.\r\n     * @return descuento nuevo a registrar.\r\n     */\r\n    public DescTarjeta cargarNuevoDescuentoTarjeta(Local local) {\r\n        String nombre = cargarNombre();\r\n\r\n        int porcentaje = ingresePorcentajeDesc();\r\n\r\n        while (porcentaje <= 0 || porcentaje > 100){\r\n            porcentaje = ingresePorcentajeDescNuevamente();\r\n        }\r\n        String tarjeta = local.seleccionTarjeta();\r\n\r\n        return new DescTarjeta(porcentaje, tarjeta, nombre);\r\n    }\r\n\r\n    /**\r\n     * Método para consultar al usuario si desea continuar con lo que está realizando.\r\n     * @return true en caso de que desee continuar; false en caso de que no desee continuar.\r\n     */\r\n    public boolean deseaContinuar() {\r\n        System.out.println(\"Ingrese 1 si desea continuar \\n\");\r\n        int aux = sc.nextInt();\r\n        if (aux == 1) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public int cargaStock() {\r\n        System.out.println(\"Ingrese el stock: \");\r\n        return sc.nextInt();\r\n    }\r\n\r\n    public int cargaStockNuevamente(){\r\n        System.out.println(\"El stock ingresado no es correcto, ingrese 0 de no querer ingresar nuevamente:\");\r\n        return sc.nextInt();\r\n    }\r\n\r\n    /**\r\n     * Método para cargar por teclado el nombre de un artículo.\r\n     * @return nombre del artículo cargado.\r\n     */\r\n    public String cargarNombreArticulo() {\r\n        System.out.println(\"Ingrese el nombre del artículo: \");\r\n        return sc.nextLine();\r\n    }\r\n\r\n    /**\r\n     * Método para volver a cargar el nombre de un artículo en caso de que el nombre ingresado anteriormente no sea posible.\r\n     * @param nombre cargado anteriormente.\r\n     * @return Nombre presuntamente corregido.\r\n     */\r\n    public String cargarNuevamenteNombreArticulo(String nombre) {\r\n        System.out.println(nombre + \" es el nombre de un artículo que ya existe en el registro.\");\r\n        System.out.println(\"Ingrese nuevamente el nombre del  artículo: \");\r\n        return sc.nextLine();\r\n    }\r\n\r\n    /**\r\n     * Método para cargar por teclado el costo de un artículo.\r\n     * @return costo del artículo cargado.\r\n     */\r\n    public  double cargarCostoArticulo(){\r\n        System.out.println(\"Ingrese el costo del articulo: \");\r\n        return sc.nextDouble();\r\n    }\r\n\r\n    /**\r\n     * Método para cargar por teclado el departamento de un artículo.\r\n     * @return departamento del artículo cargado.\r\n     */\r\n    public String cargarDepartamentoArticulo() {\r\n        System.out.println(\"Ingrese el departamento del artículo: \");\r\n        return sc.nextLine();\r\n    }\r\n\r\n    /**\r\n     * Método para cargar por teclado la marca de un artículo.\r\n     * @return marca del artículo cargado.\r\n     */\r\n    public String cargarMarcaArticulo() {\r\n        System.out.println(\"Ingrese la marca del artículo: \");\r\n        return sc.nextLine();\r\n    }\r\n\r\n    /**\r\n     * Método para cargar por teclado la utilidad de un articulo.\r\n     * @return utilidad del articulo.\r\n     */\r\n    public double cargarUtilidadArticulo() {\r\n        System.out.println(\"Ingrese la utilidad del articulo: \");\r\n        return sc.nextDouble();\r\n    }\r\n\r\n    /**\r\n     * Método para volver a cargar la utilidad de un articulo en caso de que el valor ingresado anteriormente sea negativo.\r\n     * @param utilidad cargada anteriormente.\r\n     * @return Utilidad presuntamente corregida.\r\n     */\r\n    public double cargarNuevamenteUtilidadNegativa(double utilidad) {\r\n        System.out.println(utilidad + \" no es una utilidad válida. Se desea ganar dinero con las ventas.\");\r\n        System.out.println(\"Ingrese nuevamente la utilidad del articulo: \");\r\n        return sc.nextDouble();\r\n    }\r\n\r\n    /**\r\n     * Método para volver a cargar la utilidad de un articulo en caso de que el valor ingresado anteriormente sea excesivo.\r\n     * @param utilidad cargada anteriormente.\r\n     * @return Utilidad presuntamente corregida.\r\n     */\r\n    public double cargarNuevamenteUtilidadExcesiva(double utilidad) {\r\n        System.out.println(utilidad + \" no es una utilidad válida.\");\r\n        System.out.println(\"Ingrese nuevamente la utilidad del articulo: \");\r\n        return sc.nextDouble();\r\n    }\r\n\r\n    /**\r\n     * Método para consultar al usuario si desea continuar cargando artículos.\r\n     * @return true en caso de que desee continuar; false en caso de que no desee continuar.\r\n     */\r\n    public boolean continuarCargandoArticulos(){\r\n        System.out.println(\"¿Desea continuar cargando artículos?\");\r\n        System.out.println(\"Presione 1 si es así. En caso contrario presione cualquier otro número.\");\r\n        int aux = sc.nextInt();\r\n        if(aux == 1){\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Método para consultar al usuario si desea continuar cargando artículos.\r\n     * @return true en caso de que desee continuar; false en caso de que no desee continuar.\r\n     */\r\n    public boolean continuarCargandoLineasCompra(){\r\n        System.out.println(\"¿Desea continuar cargando lineas en la compra?\");\r\n        System.out.println(\"Presione 1 si es así. Para finalizar compra presione cualquier otro número.\");\r\n        int aux = sc.nextInt();\r\n        if(aux == 1){\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Método para cargar por teclado la cantidad deseada.\r\n     * @return cantidad deseada\r\n     */\r\n    public int cargarCantidadArticulo(){\r\n        System.out.println(\"Ingrese la cantidad del articulo: \");\r\n        return sc.nextInt();\r\n    }\r\n\r\n    /**\r\n     * Método para volver a cargar por teclado la cantidad deseada luego de la validación fallida.\r\n     * @return cantidad deseada\r\n     */\r\n    public int cargarNuevamenteCantidadArticulo(int cantidad){\r\n        System.out.println(\"No se puede vender la cantidad ingresada. (\"+ cantidad+\" en stock)\");\r\n        System.out.println(\"Ingrese nuevamente la cantidad del articulo: \");\r\n        return sc.nextInt();\r\n    }\r\n\r\n    /**\r\n     * Método para volver a cargar la cantidad de artículos en caso de que el valor ingresado anteriormente no sea posible.\r\n     * @param cantidad cargada anteriormente.\r\n     * @return Cantidad presuntamente corregida.\r\n     */\r\n    public int cantidadCeroONegativa(int cantidad) {\r\n        System.out.println(cantidad + \" no es una cantidad de artículos válida.\");\r\n        System.out.println(\"Ingrese nuevamente la cantidad del articulo: \");\r\n        return sc.nextInt();\r\n    }\r\n\r\n    /**\r\n     * Método para cargar el costo de la linea comprada.\r\n     * @return costo de la linea.\r\n     */\r\n    public double cargarCostoLinea() {\r\n        System.out.println(\"Ingrese el costo de la linea: \");\r\n        return sc.nextDouble();\r\n    }\r\n\r\n    /**\r\n     * Método para volver a cargar el costo de una linea en caso de que el valor ingresado anteriormente no sea posible.\r\n     * @param costo cargado anteriormente.\r\n     * @return costo presuntamente corregido.\r\n     */\r\n    public double costoCeroONegativo(double costo) {\r\n        System.out.println(costo + \" no es un costo de línea válida.\");\r\n        System.out.println(\"Ingrese nuevamente el costo de la linea: \");\r\n        return sc.nextDouble();\r\n    }\r\n\r\n    /**\r\n     * Método para cargar por teclado el metodo de pago\r\n     * @return\r\n     */\r\n    public int cargarMetodoPago(){\r\n        System.out.println(\"1.Efectivo\");\r\n        System.out.println(\"\\n2.Tarjeta\");\r\n        System.out.println(\"\\n3.Cheque\");\r\n        System.out.println(\"\\nIngrese el metodo con el que va a pagar: \");\r\n        return sc.nextInt();\r\n    }\r\n\r\n    /**\r\n     * Método para cargar por teclado el nombre de la tarjeta con la que se realizará el pago.\r\n     * @return Opción elegida en forma de int.\r\n     */\r\n    public int cargarTarjeta(){\r\n        System.out.println(\"1. Visa\");\r\n        System.out.println(\"\\n2. Mastercard\");\r\n        System.out.println(\"\\n3. Cabal\");\r\n        System.out.println(\"\\n4. American Express\");\r\n        System.out.println(\"\\n5. Maestro\");\r\n        System.out.println(\"\\n6. Naranja\");\r\n        System.out.println(\"\\nIngrese la tarjeta del cliente: \");\r\n\r\n        return sc.nextInt();\r\n    }\r\n\r\n    /**\r\n     * Método para elegir cómo seguir en caso de que el nombre ingresado no corresponda a un artículo existente en los registros de local.\r\n     * @param nombre - Nombre ingresado.\r\n     * @return Opción elegida en forma de int. 1 - Intentar nuevamente. 2 - Agregar \" + \" al registro.\");.\r\n     */\r\n    public int nombreArticuloCompradoNoExiste(String nombre) {\r\n        System.out.println(nombre + \" no corresponde a un artículo registrado.\");\r\n        System.out.println(\"1 - Intentar nuevamente.\");\r\n        System.out.println(\"2 - Agregar \" + nombre + \" al registro.\");\r\n        System.out.println(\"Seleccione la acción a realizar:\");\r\n        return sc.nextInt();\r\n    }\r\n\r\n    public int clienteNoExiste(){\r\n        System.out.println(\"\\nEl cliente buscado no existe. \");\r\n        System.out.println(\"\\n1. Volver a cargar el CUIT\");\r\n        System.out.println(\"\\n2. Pasar venta como consumidor final\");\r\n        System.out.println(\"\\n3. Crear nuevo cliente\");\r\n        System.out.println(\"\\n4. Ingrese la accion a realizar: \");\r\n        return sc.nextInt();\r\n    }\r\n\r\n    public int proveedorNoExiste(){\r\n        System.out.println(\"\\nEl proveedor buscado no existe. \");\r\n        System.out.println(\"\\n1. Volver a cargar el CUIT\");\r\n        System.out.println(\"\\n2. Crear nuevo proveedor\");\r\n        System.out.println(\"\\n3. Ingrese la accion a realizar: \");\r\n        return sc.nextInt();\r\n    }\r\n\r\n    public int ingresePorcentajeDesc(){\r\n        System.out.println(\"Ingrese el porcentaje que quiere que tenga: \");\r\n        return sc.nextInt();\r\n    }\r\n\r\n    public int ingresePorcentajeDescNuevamente(){\r\n        System.out.println(\"El porcentaje ingresado no es correcto, ingreselo nuevamente\");\r\n        System.out.println(\"(tiene que ser mayor a 0 y menor o igual a 100):\");\r\n        return sc.nextInt();\r\n    }\r\n\r\n    /**\r\n     * Método para cargar por teclado un nombre.\r\n     * @return nombre cargado.\r\n     */\r\n    public String cargarNombre() {\r\n        System.out.println(\"Ingrese el nombre: \");\r\n        return sc.nextLine();\r\n    }\r\n\r\n    /**\r\n     * Método para cargar por teclado el nombre de una Persona.\r\n     * @return nombre de la persana cargado.\r\n     */\r\n    public String cargarApellido() {\r\n        System.out.println(\"Ingrese el apellido: \");\r\n        return sc.nextLine();\r\n    }\r\n\r\n    /**\r\n     * Método para cargar por teclado la dirección de una Persona.\r\n     * @return dirección de la persana cargado.\r\n     */\r\n    public String cargarDireccion() {\r\n        System.out.println(\"Ingrese la direccion: \");\r\n        return sc.nextLine();\r\n    }\r\n\r\n    /**\r\n     * Método para cargar por teclado el teléfono de una Persona.\r\n     * @return teléfono de la persana cargado.\r\n     */\r\n    public String cargarTelefono() {\r\n        System.out.println(\"Ingrese el telefono: \");\r\n        return sc.nextLine();\r\n    }\r\n\r\n    /**\r\n     * Método para cargar por teclado el CUIT de una Persona.\r\n     * @return CUIT de la persana cargado.\r\n     */\r\n    public String cargarCuit() {\r\n        System.out.println(\"Ingrese el cuit: \");\r\n        return sc.nextLine();\r\n    }\r\n\r\n    /**\r\n     * Método para volver a cargar el CUIT de una persona en caso de que el CUIT ingresado anteriormente no sea posible.\r\n     * @param cuit cargado anteriormente.\r\n     * @return CUIT presuntamente corregido.\r\n     */\r\n    public String cargarNuevamenteCuitPersona(String cuit) {\r\n        System.out.println(cuit + \" es el CUIT de una persona que ya existe en el registro.\");\r\n        System.out.println(\"Ingrese nuevamente el CUIT: \");\r\n        return sc.nextLine();\r\n    }\r\n\r\n    /**\r\n     * Método para cargar por teclado el email de una Persona.\r\n     * @return email de la persana cargado.\r\n     */\r\n    public String cargarEmail() {\r\n        System.out.println(\"Ingrese el email: \");\r\n        return sc.nextLine();\r\n    }\r\n\r\n    /**\r\n     * Método para volver a cargar por teclado el email luego de la validación fallida.\r\n     * @param email cargado anteriormente.\r\n     * @return email presuntamente corregido.\r\n     */\r\n    public String cargarNuevamenteEmailPersona(String email) {\r\n        System.out.println(email + \" no es una dirección de correo electrónico válida.\");\r\n        System.out.println(\"Ingrese nuevamente el email: \");\r\n        return sc.nextLine();\r\n    }\r\n\r\n    /**\r\n     * Método para cargar por teclado la localidad de un Proveedor.\r\n     * @return localidad del proveedor cargado.\r\n     */\r\n    public String cargarLocalidad(){\r\n        System.out.println(\"Ingrese la localidad: \");\r\n        return sc.nextLine();\r\n    }\r\n\r\n    /**\r\n     * Método para cargar la opción a elegir en el menú principal.\r\n     * @return (1 Nueva venta)\r\n     *         (2 Nueva compra)\r\n     *         (3 Nuevo cliente)\r\n     *         (4 Nuevo proveedor)\r\n     *         (5 Nuevo articulo)\r\n     *         (6 Lista clientes)\r\n     *         (7 Lista proveedores)\r\n     *         (8 Lista articulos)\r\n     *         (9 Salir)\r\n     */\r\n    public int cargarOpMain(){\r\n        System.out.println(\"Ingrese una opcion para continuar: \");\r\n        System.out.println(\"1 - Nueva venta.\");\r\n        System.out.println(\"2 - Nueva compra.\");\r\n        System.out.println(\"3 - Nuevo cliente.\");\r\n        System.out.println(\"4 - Nuevo proveedor.\");\r\n        System.out.println(\"5 - Nuevo articulo.\");\r\n        System.out.println(\"6 - Lista clientes.\");\r\n        System.out.println(\"7 - Lista proveedores.\");\r\n        System.out.println(\"8 - Lista articulos.\");\r\n        System.out.println(\"9 - Salir.\");\r\n        return sc.nextInt();\r\n    }\r\n\r\n    /**\r\n     * Metodo para ingresar lo que quiere modificar\r\n     * @return el numero\r\n     */\r\n    public int modificiarArticulo(){\r\n        System.out.println(\"1. Nombre\");\r\n        System.out.println(\"\\n2. Departamento\");\r\n        System.out.println(\"\\n3. Marca\");\r\n        System.out.println(\"\\n4. Costo\");\r\n        System.out.println(\"\\n5. Utilidad\");\r\n        System.out.println(\"\\n6. Precio\");\r\n        System.out.println(\"\\n0. Salir\");\r\n        System.out.println(\"\\nIngrese lo que quiere modificar: \");\r\n        return sc.nextInt();\r\n    }\r\n\r\n    public int numeroCaja(){\r\n        System.out.println(\"Ingrese el numero de caja a operar: \");\r\n        return sc.nextInt();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/company/Utilidad/Menu.java b/src/com/company/Utilidad/Menu.java
--- a/src/com/company/Utilidad/Menu.java	(revision 3c65671a989e39bed373d312070d814dcd762ec1)
+++ b/src/com/company/Utilidad/Menu.java	(date 1623874207188)
@@ -10,6 +10,7 @@
 import com.company.Persona.Cliente;
 import com.company.Persona.Proveedor;
 
+import java.io.IOException;
 import java.time.LocalDate;
 import java.time.LocalTime;
 import java.util.Scanner;
@@ -211,6 +212,7 @@
                     if(cant != 0){
                         nuevaVenta.agregarLinea(art, cant);
                         local.nuevoStock(art,cant);
+                        clearConsole();
                     }
                 }
 
@@ -618,4 +620,15 @@
         System.out.println("Ingrese el numero de caja a operar: ");
         return sc.nextInt();
     }
+
+    public static void clearConsole() {
+        try {
+            if (System.getProperty("os.name").contains("Windows")) {
+                new ProcessBuilder("cmd", "/c", "cls").inheritIO().start().waitFor();
+            }
+            else {
+                System.out.print("\033\143");
+            }
+        } catch (IOException | InterruptedException ex) {}
+    }
 }
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectKey\">\r\n    <option name=\"state\" value=\"project://e2804f05-5315-4fc6-a121-c522a6c26470\" />\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_16\" default=\"true\" project-jdk-name=\"16\" project-jdk-type=\"JavaSDK\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_16\" project-jdk-name=\"16\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 3c65671a989e39bed373d312070d814dcd762ec1)
+++ b/.idea/misc.xml	(date 1623873818076)
@@ -3,8 +3,9 @@
   <component name="ProjectKey">
     <option name="state" value="project://e2804f05-5315-4fc6-a121-c522a6c26470" />
   </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_16" default="true" project-jdk-name="16" project-jdk-type="JavaSDK">
+
   <component name="ProjectRootManager" version="2" languageLevel="JDK_16" project-jdk-name="16" project-jdk-type="JavaSDK">
+
     <output url="file://$PROJECT_DIR$/out" />
   </component>
 </project>
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"613e9072-b7fc-49bf-8292-9416e1253c59\" name=\"Default Changelist\" comment=\"\">\r\n<<<<<<< .merge_file_a20524\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/libraries/gson_2_8_6.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/libraries/gson_2_8_6.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/out/production/TP Final Labo III/com/company/Local/Local.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/TP Final Labo III/com/company/Local/Local.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/out/production/TP Final Labo III/com/company/Operacion/Venta.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/TP Final Labo III/com/company/Operacion/Venta.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/out/production/TP Final Labo III/com/company/Utilidad/Menu.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/TP Final Labo III/com/company/Utilidad/Menu.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/out/production/TP Final Labo III/com/company/Utilidad/Validacion.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/TP Final Labo III/com/company/Utilidad/Validacion.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/com/company/Local/Local.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/com/company/Local/Local.java\" afterDir=\"false\" />\r\n=======\r\n      <change afterPath=\"$PROJECT_DIR$/ArchivoLocal\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/out/production/TP Final Labo III/com/company/Json/LocalJson$1.class\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/out/production/TP Final Labo III/com/company/Json/LocalJson.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/out/production/TP Final Labo III/com/company/Local/Caja.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/TP Final Labo III/com/company/Local/Caja.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/out/production/TP Final Labo III/com/company/Local/DescTarjeta.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/TP Final Labo III/com/company/Local/DescTarjeta.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/out/production/TP Final Labo III/com/company/Local/Descuento.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/TP Final Labo III/com/company/Local/Descuento.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/out/production/TP Final Labo III/com/company/Local/Local.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/TP Final Labo III/com/company/Local/Local.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/out/production/TP Final Labo III/com/company/Main.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/TP Final Labo III/com/company/Main.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/out/production/TP Final Labo III/com/company/Operacion/Operacion.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/TP Final Labo III/com/company/Operacion/Operacion.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/out/production/TP Final Labo III/com/company/Operacion/Venta.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/TP Final Labo III/com/company/Operacion/Venta.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/out/production/TP Final Labo III/com/company/Utilidad/Menu.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/TP Final Labo III/com/company/Utilidad/Menu.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/out/production/TP Final Labo III/com/company/Utilidad/Validacion.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/TP Final Labo III/com/company/Utilidad/Validacion.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/com/company/Json/LocalJson.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/com/company/Json/LocalJson.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/com/company/Local/Caja.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/com/company/Local/Caja.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/com/company/Local/DescTarjeta.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/com/company/Local/DescTarjeta.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/com/company/Local/Descuento.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/com/company/Local/Descuento.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/com/company/Local/Local.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/com/company/Local/Local.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/com/company/Main.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/com/company/Main.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/com/company/Operacion/Operacion.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/com/company/Operacion/Operacion.java\" afterDir=\"false\" />\r\n>>>>>>> .merge_file_a33320\r\n      <change beforePath=\"$PROJECT_DIR$/src/com/company/Operacion/Venta.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/com/company/Operacion/Venta.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/com/company/Utilidad/Menu.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/com/company/Utilidad/Menu.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/com/company/Utilidad/Validacion.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/com/company/Utilidad/Validacion.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"develop\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"HighlightingSettingsPerFile\">\r\n    <setting file=\"file://$PROJECT_DIR$/src/com/company/Operacion/Venta.java\" root0=\"SKIP_INSPECTION\" />\r\n  </component>\r\n  <component name=\"ProblemsViewState\">\r\n    <hideBySeverity>\r\n      <option value=\"15\" />\r\n    </hideBySeverity>\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"1tdas8AJoWuxShoHPLRSiUU1Lqs\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"SHARE_PROJECT_CONFIGURATION_FILES\" value=\"true\" />\r\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\r\n    <property name=\"aspect.path.notification.shown\" value=\"true\" />\r\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$/gson-2.8.7.jar\" />\r\n    <property name=\"node.js.detected.package.eslint\" value=\"true\" />\r\n    <property name=\"node.js.detected.package.tslint\" value=\"true\" />\r\n    <property name=\"node.js.selected.package.eslint\" value=\"(autodetect)\" />\r\n    <property name=\"node.js.selected.package.tslint\" value=\"(autodetect)\" />\r\n    <property name=\"nodejs_package_manager_path\" value=\"npm\" />\r\n    <property name=\"project.structure.last.edited\" value=\"Libraries\" />\r\n    <property name=\"project.structure.proportion\" value=\"0.15\" />\r\n    <property name=\"project.structure.side.proportion\" value=\"0.2\" />\r\n    <property name=\"settings.editor.selected.configurable\" value=\"editor.preferences.fonts.default\" />\r\n  </component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Chango\\Documents\\TP-Final-Labo-III\\src\\com\\company\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.Main\">\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.company.Main\" />\r\n      <module name=\"TP Final Labo III\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Unnamed\" type=\"Application\" factoryName=\"Application\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.company.Main\" />\r\n      <module name=\"TP Final Labo III\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"gson-2.8.7.jar\" type=\"JarApplication\" temporary=\"true\">\r\n      <option name=\"JAR_PATH\" value=\"$PROJECT_DIR$/src/com/company/gson-2.8.7.jar\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <list>\r\n      <item itemvalue=\"Application.Main\" />\r\n      <item itemvalue=\"Application.Unnamed\" />\r\n      <item itemvalue=\"JAR Application.gson-2.8.7.jar\" />\r\n    </list>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"JAR Application.gson-2.8.7.jar\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"613e9072-b7fc-49bf-8292-9416e1253c59\" name=\"Default Changelist\" comment=\"\" />\r\n      <created>1623101623456</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1623101623456</updated>\r\n      <workItem from=\"1623101625183\" duration=\"153000\" />\r\n      <workItem from=\"1623246239909\" duration=\"4396000\" />\r\n      <workItem from=\"1623281472421\" duration=\"4505000\" />\r\n      <workItem from=\"1623338452881\" duration=\"12688000\" />\r\n      <workItem from=\"1623364101665\" duration=\"882000\" />\r\n      <workItem from=\"1623420814001\" duration=\"4997000\" />\r\n      <workItem from=\"1623436551490\" duration=\"5877000\" />\r\n      <workItem from=\"1623764328626\" duration=\"5964000\" />\r\n      <workItem from=\"1623787729410\" duration=\"3207000\" />\r\n      <workItem from=\"1623856555998\" duration=\"1299000\" />\r\n      <workItem from=\"1623858159503\" duration=\"107000\" />\r\n      <workItem from=\"1623858350789\" duration=\"125000\" />\r\n      <workItem from=\"1623858580484\" duration=\"1062000\" />\r\n      <workItem from=\"1623859713325\" duration=\"843000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 3c65671a989e39bed373d312070d814dcd762ec1)
+++ b/.idea/workspace.xml	(date 1623874634807)
@@ -2,39 +2,13 @@
 <project version="4">
   <component name="ChangeListManager">
     <list default="true" id="613e9072-b7fc-49bf-8292-9416e1253c59" name="Default Changelist" comment="">
-<<<<<<< .merge_file_a20524
-      <change beforePath="$PROJECT_DIR$/.idea/libraries/gson_2_8_6.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/libraries/gson_2_8_6.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/out/production/TP Final Labo III/com/company/Local/Local.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/TP Final Labo III/com/company/Local/Local.class" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/out/production/TP Final Labo III/com/company/Operacion/Venta.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/TP Final Labo III/com/company/Operacion/Venta.class" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/out/production/TP Final Labo III/com/company/Utilidad/Menu.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/TP Final Labo III/com/company/Utilidad/Menu.class" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/out/production/TP Final Labo III/com/company/Utilidad/Validacion.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/TP Final Labo III/com/company/Utilidad/Validacion.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/com/company/Local/Local.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/com/company/Local/Local.java" afterDir="false" />
-=======
-      <change afterPath="$PROJECT_DIR$/ArchivoLocal" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/out/production/TP Final Labo III/com/company/Json/LocalJson$1.class" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/out/production/TP Final Labo III/com/company/Json/LocalJson.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/TP Final Labo III/com/company/Local/Caja.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/TP Final Labo III/com/company/Local/Caja.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/TP Final Labo III/com/company/Local/DescTarjeta.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/TP Final Labo III/com/company/Local/DescTarjeta.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/TP Final Labo III/com/company/Local/Descuento.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/TP Final Labo III/com/company/Local/Descuento.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/TP Final Labo III/com/company/Local/Local.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/TP Final Labo III/com/company/Local/Local.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/TP Final Labo III/com/company/Main.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/TP Final Labo III/com/company/Main.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/TP Final Labo III/com/company/Operacion/Operacion.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/TP Final Labo III/com/company/Operacion/Operacion.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/TP Final Labo III/com/company/Operacion/Venta.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/TP Final Labo III/com/company/Operacion/Venta.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/TP Final Labo III/com/company/Utilidad/Menu.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/TP Final Labo III/com/company/Utilidad/Menu.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/TP Final Labo III/com/company/Utilidad/Validacion.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/TP Final Labo III/com/company/Utilidad/Validacion.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/com/company/Json/LocalJson.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/com/company/Json/LocalJson.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/com/company/Local/Caja.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/com/company/Local/Caja.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/com/company/Local/DescTarjeta.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/com/company/Local/DescTarjeta.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/com/company/Local/Descuento.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/com/company/Local/Descuento.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/com/company/Local/Local.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/com/company/Local/Local.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/com/company/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/com/company/Main.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/com/company/Operacion/Operacion.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/com/company/Operacion/Operacion.java" afterDir="false" />
->>>>>>> .merge_file_a33320
-      <change beforePath="$PROJECT_DIR$/src/com/company/Operacion/Venta.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/com/company/Operacion/Venta.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/com/company/Utilidad/Menu.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/com/company/Utilidad/Menu.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/com/company/Utilidad/Validacion.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/com/company/Utilidad/Validacion.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -91,14 +65,7 @@
       <recent name="C:\Users\Chango\Documents\TP-Final-Labo-III\src\com\company" />
     </key>
   </component>
-  <component name="RunManager" selected="Application.Main">
-    <configuration name="Main" type="Application" factoryName="Application">
-      <option name="MAIN_CLASS_NAME" value="com.company.Main" />
-      <module name="TP Final Labo III" />
-      <method v="2">
-        <option name="Make" enabled="true" />
-      </method>
-    </configuration>
+  <component name="RunManager">
     <configuration name="Unnamed" type="Application" factoryName="Application" nameIsGenerated="true">
       <option name="MAIN_CLASS_NAME" value="com.company.Main" />
       <module name="TP Final Labo III" />
@@ -106,20 +73,6 @@
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration name="gson-2.8.7.jar" type="JarApplication" temporary="true">
-      <option name="JAR_PATH" value="$PROJECT_DIR$/src/com/company/gson-2.8.7.jar" />
-      <method v="2" />
-    </configuration>
-    <list>
-      <item itemvalue="Application.Main" />
-      <item itemvalue="Application.Unnamed" />
-      <item itemvalue="JAR Application.gson-2.8.7.jar" />
-    </list>
-    <recent_temporary>
-      <list>
-        <item itemvalue="JAR Application.gson-2.8.7.jar" />
-      </list>
-    </recent_temporary>
   </component>
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
   <component name="TaskManager">
@@ -143,6 +96,7 @@
       <workItem from="1623858350789" duration="125000" />
       <workItem from="1623858580484" duration="1062000" />
       <workItem from="1623859713325" duration="843000" />
+      <workItem from="1623874013260" duration="617000" />
     </task>
     <servers />
   </component>
@@ -161,4 +115,7 @@
     </option>
     <option name="oldMeFiltersMigrated" value="true" />
   </component>
+  <component name="com.intellij.coverage.CoverageDataManagerImpl">
+    <SUITE FILE_PATH="coverage/TP_Final_Labo_III$Main.ic" NAME="Main Coverage Results" MODIFIED="1623873921379" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
+  </component>
 </project>
\ No newline at end of file
